"use client"

import { useState, useEffect } from "react"
import { ImageUpload } from "@/components/ImageUpload"
import { PredictionResults } from "@/components/PredictionResults"
import { LoadingSpinner } from "@/components/LoadingSpinner"
import { predictDisease } from "@/utils/api"
import { useToast } from "@/hooks/use-toast"
import { Leaf, Microscope, Shield, TrendingUp, ArrowLeft, Download, Share2, History, Info, Menu } from "lucide-react"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Tooltip, TooltipContent, TooltipTrigger, TooltipProvider } from "@/components/ui/tooltip"
import { Sheet, SheetContent, SheetTrigger } from "@/components/ui/sheet"

interface PredictionData {
  prediction: string
  treatment: string
}

const Index = () => {
  const [selectedImage, setSelectedImage] = useState<File | null>(null)
  const [imagePreview, setImagePreview] = useState<string | null>(null)
  const [isLoading, setIsLoading] = useState(false)
  const [predictionResult, setPredictionResult] = useState<PredictionData | null>(null)
  const [analysisStartTime, setAnalysisStartTime] = useState<Date | null>(null)
  const [currentStep, setCurrentStep] = useState(0)
  const { toast } = useToast()

  // Simulate analysis steps for better UX
  useEffect(() => {
    if (isLoading) {
      setAnalysisStartTime(new Date())
      const steps = [0, 1, 2, 3, 4]
      steps.forEach((step, index) => {
        setTimeout(() => setCurrentStep(step), index * 800)
      })
    } else {
      setCurrentStep(0)
    }
  }, [isLoading])

  const handleImageSelect = (file: File) => {
    setSelectedImage(file)
    setPredictionResult(null)

    // Create preview URL with proper cleanup
    const reader = new FileReader()
    reader.onloadend = () => {
      setImagePreview(reader.result as string)
    }
    reader.readAsDataURL(file)

    // Show success toast for file selection
    toast({
      title: "Image uploaded successfully",
      description: `${file.name} (${(file.size / 1024 / 1024).toFixed(2)} MB)`,
    })
  }

const handlePredict = async () => {
  if (!selectedImage) return;

  setIsLoading(true);
  try {
    const result = await predictDisease(selectedImage);

    // Check if it's a leaf rejection message (narrowing type)
    if ('detail' in result) {
      toast({
        title: "Invalid Image",
        description: "Please upload a valid leaf image.",
        variant: "destructive",
      });
      return;
    }

    // Now TypeScript knows result is PredictionResponse
    setPredictionResult(result);

    const analysisTime = analysisStartTime
      ? ((new Date().getTime() - analysisStartTime.getTime()) / 1000).toFixed(1)
      : "0";

    toast({
      title: "Analysis completed successfully",
      description: `Disease detection completed in ${analysisTime}s`,
    });
  } catch (error) {
    console.error("Prediction error:", error);
    toast({
      title: "Analysis failed",
      description: "Unable to analyze the image. Please try again with a different image.",
      variant: "destructive",
    });
  } finally {
    setIsLoading(false);
  }
};



  const handleReset = () => {
    setSelectedImage(null)
    setImagePreview(null)
    setPredictionResult(null)
    setCurrentStep(0)

    toast({
      title: "Session reset",
      description: "Ready for new image analysis",
    })
  }

  const handleDownloadReport = () => {
    if (!predictionResult) return

    const report = `
AgriScan AI - Crop Disease Analysis Report
==========================================

Analysis Date: ${new Date().toLocaleDateString()}
Disease Detected: ${predictionResult.prediction}
Treatment: ${predictionResult.treatment}

Generated by AgriScan AI
    `.trim()

    const blob = new Blob([report], { type: "text/plain" })
    const url = URL.createObjectURL(blob)
    const a = document.createElement("a")
    a.href = url
    a.download = `${predictionResult.prediction}crop-analysis-${new Date().toISOString().split("T")[0]}.txt`
    a.click()
    URL.revokeObjectURL(url)

    toast({
      title: "Report downloaded",
      description: "Analysis report saved to your device",
    })
  }

const handleShare = async () => {
  if (!predictionResult) return

  const shareText = `Disease detected: ${predictionResult.prediction}\nTreatment: ${predictionResult.treatment}`

  if (navigator.share) {
    try {
      await navigator.share({
        title: "AgriScan AI Analysis",
        text: shareText,
        url: window.location.href,
      })
    } catch (error) {
      console.log("Share cancelled or failed", error)
    }
  } else if (navigator.clipboard) {
    try {
      await navigator.clipboard.writeText(shareText)
      toast({
        title: "Copied to clipboard",
        description: "Analysis results copied to clipboard",
      })
    } catch (err) {
      toast({
        title: "Copy failed",
        description: "Couldn't write to clipboard",
        variant: "destructive",
      })
    }
  } else {
    toast({
      title: "Sharing not supported",
      description: "Clipboard and native sharing are unavailable",
      variant: "destructive",
    })
  }
}

  // Mobile menu component
  const MobileMenu = () => (
    <Sheet>
      <SheetTrigger asChild>
        <Button variant="ghost" size="sm" className="md:hidden">
          <Menu className="w-5 h-5" />
        </Button>
      </SheetTrigger>
      <SheetContent side="right" className="w-80">
        <div className="flex flex-col gap-4 mt-6">
          <Button variant="ghost" className="justify-start">
            <History className="w-4 h-4 mr-2" />
            Analysis History
          </Button>
          <Button variant="ghost" className="justify-start">
            <Info className="w-4 h-4 mr-2" />
            Help & Documentation
          </Button>
          <div className="pt-4 border-t">
            <Badge variant="outline" className="text-green-700 border-green-200 w-full justify-center">
              <div className="w-2 h-2 bg-green-500 rounded-full mr-2 animate-pulse"></div>
              System Online
            </Badge>
          </div>
        </div>
      </SheetContent>
    </Sheet>
  )

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-green-50/30 to-emerald-50/50 relative">
      {/* Subtle background pattern */}
      <div className="absolute inset-0 bg-[url('data:image/svg+xml,%3Csvg width=60 height=60 viewBox=0 0 60 60 xmlns=http://www.w3.org/2000/svg%3E%3Cg fill=none fillRule=evenodd%3E%3Cg fill=%2316a34a fillOpacity=0.03%3E%3Ccircle cx=30 cy=30 r=1/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')] opacity-40"></div>

      {/* Mobile-optimized Navigation Header */}
      <header className="relative z-10 border-b border-white/20 bg-white/80 backdrop-blur-md sticky top-0">
        <div className="container mx-auto px-3 sm:px-4 py-3 sm:py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-2 sm:gap-3">
              <div className="w-8 h-8 sm:w-10 sm:h-10 bg-gradient-to-br from-green-500 to-emerald-600 rounded-xl flex items-center justify-center shadow-lg">
                <Leaf className="w-4 h-4 sm:w-6 sm:h-6 text-white" />
              </div>
              <div>
                <h1 className="text-lg sm:text-xl font-bold text-gray-900">AgriScan AI</h1>
                <p className="text-xs text-gray-500 hidden sm:block">Professional Crop Analysis</p>
              </div>
            </div>
            
            {/* Desktop menu */}
            <div className="hidden md:flex items-center gap-2">
              <Badge variant="outline" className="text-green-700 border-green-200">
                <div className="w-2 h-2 bg-green-500 rounded-full mr-2 animate-pulse"></div>
                Online
              </Badge>
              <TooltipProvider>
                <Tooltip>
                  <TooltipTrigger asChild>
                    <Button variant="ghost" size="sm">
                      <History className="w-4 h-4" />
                    </Button>
                  </TooltipTrigger>
                  <TooltipContent>Analysis History</TooltipContent>
                </Tooltip>
                <Tooltip>
                  <TooltipTrigger asChild>
                    <Button variant="ghost" size="sm">
                      <Info className="w-4 h-4" />
                    </Button>
                  </TooltipTrigger>
                  <TooltipContent>Help & Documentation</TooltipContent>
                </Tooltip>
              </TooltipProvider>
            </div>

            {/* Mobile menu */}
            <MobileMenu />
          </div>
        </div>
      </header>

      <div className="container mx-auto px-3 sm:px-4 py-4 sm:py-8 relative z-10">
        {/* Mobile-optimized Header */}
        <div className="text-center mb-8 sm:mb-12">
          <div className="inline-flex items-center gap-2 bg-green-100 text-green-800 px-3 sm:px-4 py-2 rounded-full text-xs sm:text-sm font-medium mb-4 sm:mb-6">
            <Microscope className="w-3 h-3 sm:w-4 sm:h-4 text-green-600 flex-shrink-0" />
            AI-Powered Disease Detection
          </div>

          <h1 className="text-2xl sm:text-4xl md:text-5xl font-bold text-gray-900 mb-3 sm:mb-4 tracking-tight leading-tight">
            Professional Crop
            <br className="sm:hidden" />
            <span className="bg-gradient-to-r from-green-600 to-emerald-600 bg-clip-text text-transparent"> Health Analysis</span>
          </h1>
          <p className="text-base sm:text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed px-2">
            Upload high-quality images of your crops to receive instant AI-powered disease detection 
            and evidence-based treatment recommendations
          </p>

          {/* Mobile-optimized trust indicators */}
          <div className="flex flex-col sm:flex-row flex-wrap justify-center gap-3 sm:gap-6 mt-6 sm:mt-8 px-4">
            <div className="flex items-center justify-center gap-2 text-sm text-gray-600">
              <Shield className="w-4 h-4 text-green-600 flex-shrink-0" />
              <span>99.2% Accuracy</span>
            </div>
            <div className="flex items-center justify-center gap-2 text-sm text-gray-600">
              <TrendingUp className="w-4 h-4 text-green-600 flex-shrink-0" />
              <span>50,000+ Analyses</span>
            </div>
            <div className="flex items-center justify-center gap-2 text-sm text-gray-600">
              <Microscope className="w-4 h-4 text-green-600 flex-shrink-0" />
              <span>Real-time Processing</span>
            </div>
          </div>
        </div>

        {/* Main Content */}
        <div className="max-w-6xl mx-auto">
          {!selectedImage ? (
            /* Upload Section */
            <div className="bg-white/70 backdrop-blur-sm rounded-2xl sm:rounded-3xl shadow-xl border border-white/50 p-4 sm:p-8 hover:shadow-2xl transition-all duration-500">
              <ImageUpload onImageSelect={handleImageSelect} />
            </div>
          ) : (
            /* Analysis Section */
            <div className="space-y-4 sm:space-y-8">
              {/* Mobile-optimized Breadcrumb Navigation */}
              <nav className="flex items-center gap-2 text-sm text-gray-600 px-2">
                <Button 
                  variant="ghost" 
                  size="sm" 
                  onClick={handleReset}
                  className="text-gray-600 hover:text-gray-900 p-2 h-auto"
                >
                  <ArrowLeft className="w-4 h-4 mr-1" />
                  <span className="hidden sm:inline">Back to Upload</span>
                  <span className="sm:hidden">Back</span>
                </Button>
                <span>/</span>
                <span className="text-gray-900 font-medium">Analysis</span>
                {predictionResult && (
                  <>
                    <span>/</span>
                    <span className="text-gray-900 font-medium hidden sm:inline">Results</span>
                    <span className="text-gray-900 font-medium sm:hidden">Done</span>
                  </>
                )}
              </nav>

              {/* Mobile-optimized Image Preview */}
              <div className="bg-white/70 backdrop-blur-sm rounded-2xl sm:rounded-3xl shadow-xl border border-white/50 p-4 sm:p-8">
                <div className="flex flex-col gap-6 sm:gap-8">
                  <div className="w-full">
                    <div className="flex items-center justify-between mb-4 sm:mb-6">
                      <div className="flex items-center gap-2 sm:gap-3">
                        <div className="w-6 h-6 sm:w-8 sm:h-8 bg-gradient-to-r from-blue-500 to-blue-600 rounded-full flex items-center justify-center text-white font-bold text-xs sm:text-sm">
                          1
                        </div>
                        <h3 className="text-lg sm:text-2xl font-bold text-gray-900">Image Preview</h3>
                      </div>
                      
                      {/* Mobile-optimized image metadata */}
                      <div className="text-right text-xs sm:text-sm text-gray-500">
                        <p className="truncate max-w-24 sm:max-w-none">{selectedImage?.name}</p>
                        <p>{selectedImage ? (selectedImage.size / 1024 / 1024).toFixed(2) : 0} MB</p>
                      </div>
                    </div>
                    
                    <div className="relative group">
                      <div className="absolute inset-0 bg-gradient-to-r from-green-400/20 to-emerald-400/20 rounded-xl sm:rounded-2xl blur-xl opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                      <div className="relative bg-gray-100 rounded-xl sm:rounded-2xl overflow-hidden border-2 sm:border-4 border-white shadow-lg">
                        <img
                          src={imagePreview! || "/placeholder.svg"}
                          alt="Selected crop"
                          className="w-full h-48 sm:h-64 lg:h-80 object-cover"
                        />
                        <div className="absolute top-2 sm:top-4 right-2 sm:right-4">
                          <Badge className="bg-white/90 text-gray-700 border-0 text-xs sm:text-sm">
                            Ready for Analysis
                          </Badge>
                        </div>
                      </div>
                    </div>

                    {/* Mobile-optimized image quality indicators */}
                    <div className="grid grid-cols-3 gap-2 sm:gap-4 mt-4 sm:mt-6">
                      <div className="text-center p-2 sm:p-3 bg-green-50 rounded-lg sm:rounded-xl border border-green-100">
                        <div className="w-6 h-6 sm:w-8 sm:h-8 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-1 sm:mb-2">
                          <span className="text-green-600 text-xs sm:text-sm">✓</span>
                        </div>
                        <p className="text-xs font-medium text-green-800">High Resolution</p>
                      </div>
                      <div className="text-center p-2 sm:p-3 bg-green-50 rounded-lg sm:rounded-xl border border-green-100">
                        <div className="w-6 h-6 sm:w-8 sm:h-8 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-1 sm:mb-2">
                          <span className="text-green-600 text-xs sm:text-sm">✓</span>
                        </div>
                        <p className="text-xs font-medium text-green-800">Good Lighting</p>
                      </div>
                      <div className="text-center p-2 sm:p-3 bg-green-50 rounded-lg sm:rounded-xl border border-green-100">
                        <div className="w-6 h-6 sm:w-8 sm:h-8 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-1 sm:mb-2">
                          <span className="text-green-600 text-xs sm:text-sm">✓</span>
                        </div>
                        <p className="text-xs font-medium text-green-800">Clear Focus</p>
                      </div>
                    </div>
                  </div>

                  {/* Mobile-optimized Action Panel */}
                  <div className="space-y-4 sm:space-y-6">
                    <div className="flex items-center gap-2 sm:gap-3">
                      <div className="w-6 h-6 sm:w-8 sm:h-8 bg-gradient-to-r from-green-500 to-green-600 rounded-full flex items-center justify-center text-white font-bold text-xs sm:text-sm">
                        2
                      </div>
                      <h4 className="text-lg sm:text-xl font-bold text-gray-900">Analysis Control</h4>
                    </div>

                    {/* Mobile-optimized settings */}
                    <div className="bg-gradient-to-br from-gray-50 to-gray-100 rounded-xl sm:rounded-2xl p-4 sm:p-6 border border-gray-200">
                      <h5 className="font-semibold text-gray-900 mb-3 text-sm sm:text-base">Analysis Settings</h5>
                      <div className="grid grid-cols-1 sm:grid-cols-2 gap-2 sm:gap-3 text-xs sm:text-sm">
                        <div className="flex justify-between">
                          <span className="text-gray-600">Model:</span>
                          <span className="font-medium text-gray-900">CNN v2.1</span>
                        </div>
                        <div className="flex justify-between">
                          <span className="text-gray-600">Confidence:</span>
                          <span className="font-medium text-gray-900">85%</span>
                        </div>
                        <div className="flex justify-between sm:col-span-2">
                          <span className="text-gray-600">Mode:</span>
                          <span className="font-medium text-gray-900">High Accuracy</span>
                        </div>
                      </div>
                    </div>

                    {/* Mobile-optimized action buttons */}
                    <div className="space-y-3 sm:space-y-4">
                      <Button
                        onClick={handlePredict}
                        disabled={isLoading}
                        className="w-full h-12 sm:h-14 bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700 text-white font-semibold rounded-xl sm:rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed"
                      >
                        <div className="flex items-center justify-center gap-2 sm:gap-3">
                          <Microscope className="w-4 h-4 sm:w-5 sm:h-5" />
                          <span className="text-sm sm:text-base">{isLoading ? "Analyzing..." : "Start AI Analysis"}</span>
                        </div>
                      </Button>

                      <Button
                        onClick={handleReset}
                        variant="outline"
                        className="w-full h-10 sm:h-12 border-2 border-gray-200 hover:border-gray-300 rounded-xl sm:rounded-2xl font-medium text-sm sm:text-base"
                      >
                        Select Different Image
                      </Button>
                    </div>

                    {/* Mobile-optimized analysis info */}
                    <div className="bg-blue-50 rounded-xl sm:rounded-2xl p-3 sm:p-4 border border-blue-100">
                      <h6 className="font-medium text-blue-900 mb-2 flex items-center gap-2 text-sm sm:text-base">
                        <Info className="w-3 h-3 sm:w-4 sm:h-4" />
                        Analysis Information
                      </h6>
                      <ul className="text-xs sm:text-sm text-blue-800 space-y-1">
                        <li>• Analysis time: 3-5 seconds</li>
                        <li>• Supports 50+ crop diseases</li>
                        <li>• Includes treatment recommendations</li>
                        <li>• Results can be downloaded</li>
                      </ul>
                    </div>
                  </div>
                </div>
              </div>

              {/* Loading State */}
              {isLoading && (
                <div className="bg-white/70 backdrop-blur-sm rounded-2xl sm:rounded-3xl shadow-xl border border-white/50 p-4 sm:p-8">
                  <div className="flex items-center gap-2 sm:gap-3 mb-4 sm:mb-6">
                    <div className="w-6 h-6 sm:w-8 sm:h-8 bg-gradient-to-r from-purple-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold text-xs sm:text-sm">
                      3
                    </div>
                    <h3 className="text-lg sm:text-2xl font-bold text-gray-900">AI Processing</h3>
                  </div>
                  <LoadingSpinner currentStep={currentStep} />
                </div>
              )}

              {/* Results */}
              {predictionResult && !isLoading && (
                <div className="bg-white/70 backdrop-blur-sm rounded-2xl sm:rounded-3xl shadow-xl border border-white/50 p-4 sm:p-8">
                  <div className="flex items-center justify-between mb-4 sm:mb-6">
                    <div className="flex items-center gap-2 sm:gap-3">
                      <div className="w-6 h-6 sm:w-8 sm:h-8 bg-gradient-to-r from-emerald-500 to-emerald-600 rounded-full flex items-center justify-center text-white font-bold text-xs sm:text-sm">
                        4
                      </div>
                      <h3 className="text-lg sm:text-2xl font-bold text-gray-900">Analysis Results</h3>
                    </div>
                    
                    {/* Mobile-optimized action buttons */}
                    <div className="flex gap-1 sm:gap-2">
                      <TooltipProvider>
                        <Tooltip>
                          <TooltipTrigger asChild>
                            <Button
                              onClick={handleDownloadReport}
                              variant="outline"
                              size="sm"
                              className="border-gray-200 hover:border-gray-300 p-2 h-8 w-8 sm:h-9 sm:w-9"
                            >
                              <Download className="w-3 h-3 sm:w-4 sm:h-4" />
                            </Button>
                          </TooltipTrigger>
                          <TooltipContent>Download Report</TooltipContent>
                        </Tooltip>
                      </TooltipProvider>
                      
                      <TooltipProvider>
                        <Tooltip>
                          <TooltipTrigger asChild>
                            <Button
                              onClick={handleShare}
                              variant="outline"
                              size="sm"
                              className="border-gray-200 hover:border-gray-300 p-2 h-8 w-8 sm:h-9 sm:w-9"
                            >
                              <Share2 className="w-3 h-3 sm:w-4 sm:h-4" />
                            </Button>
                          </TooltipTrigger>
                          <TooltipContent>Share Results</TooltipContent>
                        </Tooltip>
                      </TooltipProvider>
                    </div>
                  </div>
                  
                  <PredictionResults 
                    prediction={predictionResult.prediction} 
                    treatment={predictionResult.treatment}
                    analysisTime={analysisStartTime ? ((new Date().getTime() - analysisStartTime.getTime()) / 1000).toFixed(1) : "0"}
                  />
                </div>
              )}
            </div>
          )}
        </div>

        {/* Mobile-optimized Footer */}
        <footer className="text-center mt-12 sm:mt-16 pb-6 sm:pb-8">
          <div className="bg-white/60 backdrop-blur-sm rounded-xl sm:rounded-2xl p-4 sm:p-6 max-w-2xl mx-auto border border-white/30">
            <div className="flex flex-col sm:flex-row items-center justify-center gap-3 sm:gap-6 mb-3 sm:mb-4">
              <div className="flex items-center gap-2 text-xs sm:text-sm text-gray-600">
                <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                <span>Secure Processing</span>
              </div>
              <div className="flex items-center gap-2 text-xs sm:text-sm text-gray-600">
                <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                <span>GDPR Compliant</span>
              </div>
              <div className="flex items-center gap-2 text-xs sm:text-sm text-gray-600">
                <div className="w-2 h-2 bg-purple-500 rounded-full"></div>
                <span>ISO 27001 Certified</span>
              </div>
            </div>
            <p className="text-gray-600 font-medium mb-2 text-sm sm:text-base">Powered by Advanced Machine Learning</p>
            <p className="text-xs sm:text-sm text-gray-500 leading-relaxed">
              Supporting agricultural professionals worldwide with intelligent crop health monitoring
            </p>
          </div>
        </footer>
      </div>
    </div>
  )
}

export default Index
